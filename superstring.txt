import java.util.LinkedList;
import java.util.List;
import java.util.Scanner;
import java.util.stream.Collectors;

class SuperString {
    private LinkedList<String> stringLinkedList;

    public SuperString() {
        this.stringLinkedList = new LinkedList<>();
    }

    public void append(String s) {
        this.stringLinkedList.addLast(s);
    }

    public void insert(String s) {
        this.stringLinkedList.addFirst(s);
    }

    public boolean contains(String s) {
        String fullString = toString();

        return fullString.contains(s);
    }

    public void reverse() {
        LinkedList<String> newList = new LinkedList<>();

        for (int i = 0; i < this.stringLinkedList.size(); i++) {
            String oldString = this.stringLinkedList.get(i);
            StringBuilder newString = new StringBuilder();
            for (int j = oldString.length() - 1; j >= 0; j--) {
                newString.append(oldString.charAt(j));
            }

            newList.add(newString.toString());
        }

        this.stringLinkedList = newList;
    }

    public String toString(){
        StringBuilder fullString = new StringBuilder();
        for (String str : this.stringLinkedList) {
            fullString.append(str);
        }

        return fullString.toString();
    }

    public List<String> removeLast(int n){
        
        return this.stringLinkedList.stream().limit(this.stringLinkedList.size() - n).collect(Collectors.toList());
    }
}

public class SuperStringTest {

    public static void main(String[] args) {
        Scanner jin = new Scanner(System.in);
        int k = jin.nextInt();
        if (k == 0) {
            SuperString s = new SuperString();
            while (true) {
                int command = jin.nextInt();
                if (command == 0) {//append(String s)
                    s.append(jin.next());
                }
                if (command == 1) {//insert(String s)
                    s.insert(jin.next());
                }
                if (command == 2) {//contains(String s)
                    System.out.println(s.contains(jin.next()));
                }
                if (command == 3) {//reverse()
                    s.reverse();
                }
                if (command == 4) {//toString()
                    System.out.println(s);
                }
                if (command == 5) {//removeLast(int k)
                    s.removeLast(jin.nextInt());
                }
                if (command == 6) {//end
                    break;
                }
            }
        }
    }

}
